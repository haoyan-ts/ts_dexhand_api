syntax = "proto3";

package ts.dexhand.v1;

import "ts/dexhand/v1/teleoperation_service.proto";

option csharp_namespace = "TeleoperationServiceGrpc";

service HandService {
  // Hand control operations
  rpc EnableHand(EnableHandRequest) returns (EnableHandResponse) {}
  rpc DisableHand(DisableHandRequest) returns (DisableHandResponse) {}
  rpc ConnectHand(ConnectHandRequest) returns (ConnectHandResponse) {}
  rpc DisconnectHand(DisconnectHandRequest) returns (DisconnectHandResponse) {}

  // Hand pose control
  rpc SetHandPose(SetHandPoseRequest) returns (SetHandPoseResponse) {}
  rpc GetHandPose(GetHandPoseRequest) returns (GetHandPoseResponse) {}

  // // Streaming operations
  // rpc SendPose(stream SendHandPoseRequest) returns (stream SendHandPoseResponse) {}
  // rpc SendJoint(stream SendHandJointRequest) returns (stream SendHandJointResponse) {}
  // rpc ReceiveStatus(stream ReceiveHandStatusRequest) returns (stream ReceiveHandStatusResp
}

// Basic request messages
message EnableHandRequest {
  Hand hand = 1;
}

message DisableHandRequest {
  Hand hand = 1;
}

message ConnectHandRequest {
  Hand hand = 1;
}

message DisconnectHandRequest {
  Hand hand = 1;
}

message EnableHandResponse {
  bool success = 1;
}

message DisableHandResponse {
  bool success = 1;
}

message ConnectHandResponse {
  bool success = 1;
}

message DisconnectHandResponse {
  bool success = 1;
}

// message ChangeHandControlModeResponse {
//   bool success = 1;
// }
// Control mode
// message ChangeHandControlModeRequest {
//   Hand hand = 1;
//   uint32 control_mode = 2;
// }

// Hand pose control
message SetHandPoseRequest {
  Hand hand = 1;
  repeated double poses = 2;
}

message SetHandPoseResponse {
  bool success = 1;
}

message GetHandPoseRequest {
  Hand hand = 1;
}

message GetHandPoseResponse {
  Hand hand = 1;
  repeated double poses = 2;
}
// Streaming messages
// message HandPacketHeader {
//   Hand hand = 1;
//   HandPacketType type = 2;
//   uint32 length = 3;
// }

// message HandPacket {
//   HandPacketHeader header = 1;
//   repeated double poses = 2;
// }

// message HandSetupRequest {
//   string hand_id = 1;
//   HandPacketType type = 2;
//   uint32 length = 3;
// }

// message HandCancelRequest {
//   string hand_id = 1;
// }

// message SendHandPoseRequest {
//   oneof request {
//     HandSetupRequest setup_request = 1;
//     HandPacket packet_request = 2;
//     HandCancelRequest cancel_request = 3;
//   }
// }

// message SendHandJointRequest {
//   oneof request {
//     HandSetupRequest setup_request = 1;
//     HandPacket packet_request = 2;
//     HandCancelRequest cancel_request = 3;
//   }
// }

// message ReceiveHandStatusRequest {
//   oneof request {
//     HandSetupRequest setup_request = 1;
//     HandCancelRequest cancel_request = 2;
//   }
// }

// message ReceiveHandStatusResponse {
//   oneof response {
//     HandStatus status = 1;
//     HandException exception = 2;
//     HandExit exit = 3;
//   }
// }

// message HandStatus {
//   string id = 1;
//   string name = 2;
//   google.protobuf.Any data = 3;
//   repeated double angles = 4;
// }

// message HandException {
//   string message = 1;
// }

// message HandExit {}

// enum HandPacketType {
//   HAND_PACKET_TYPE_UNSPECIFIED = 0;
//   HAND_PACKET_TYPE_POSE = 1;
//   HAND_PACKET_TYPE_JOINT = 2;
// }
