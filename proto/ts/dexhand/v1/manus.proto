syntax = "proto3";

package ts.dexhand.v1;

option csharp_namespace = "TeleoperationServiceGrpc";

service ManusService {
  // Hand operations
  rpc ListHandSensors(ListHandSensorsRequest) returns (ListHandSensorsResponse) {}
  rpc GetHandSensor(GetHandSensorRequest) returns (GetHandSensorResponse) {}
  rpc CreateHandSensor(CreateHandSensorRequest) returns (CreateHandSensorResponse) {}
  rpc UpdateHandSensor(UpdateHandSensorRequest) returns (UpdateHandSensorResponse) {}
  rpc DeleteHandSensor(DeleteHandSensorRequest) returns (DeleteHandSensorResponse) {}

  // Wrist operations
  rpc ListWristSensors(ListWristSensorsRequest) returns (ListWristSensorsResponse) {}
  rpc GetWristSensor(GetWristSensorRequest) returns (GetWristSensorResponse) {}
  rpc CreateWristSensor(CreateWristSensorRequest) returns (CreateWristSensorResponse) {}
  rpc UpdateWristSensor(UpdateWristSensorRequest) returns (UpdateWristSensorResponse) {}
  rpc DeleteWristSensor(DeleteWristSensorRequest) returns (DeleteWristSensorResponse) {}

  // Data operations
  rpc SetHandSensorData(SetHandSensorDataRequest) returns (SetHandSensorDataResponse) {}
  rpc SetWristSensorData(SetWristSensorDataRequest) returns (SetWristSensorDataResponse) {}
}

// HandSensor related messages
message ListHandSensorsRequest {}

message ListHandSensorsResponse {
  repeated HandSensor handSensors = 1;
}

message GetHandSensorRequest {
  string id = 1;
}

message GetHandSensorResponse {
  HandSensor handSensor = 1;
}

message CreateHandSensorRequest {
  HandSensor handSensor = 1;
}

message CreateHandSensorResponse {
  HandSensor handSensor = 1;
}

message UpdateHandSensorRequest {
  HandSensor handSensor = 1;
}

message UpdateHandSensorResponse {
  HandSensor handSensor = 1;
}

message DeleteHandSensorRequest {
  string id = 1;
}

message DeleteHandSensorResponse {
  bool success = 1;
}

message SetHandSensorDataRequest {
  string id = 1;
  HandSensorData data = 2;
}

message SetHandSensorDataResponse {
  bool success = 1;
}

message HandSensor {
  string id = 1;
  string name = 2;
  string description = 3;
}

message HandSensorData {
  string id = 1;
  uint32 timestamp = 2;
  uint32 num_sequence = 3;
  repeated double data = 4;
}

// WristSensor related messages
message ListWristSensorsRequest {}

message ListWristSensorsResponse {
  repeated WristSensor wristSensors = 1;
}

message GetWristSensorRequest {
  string id = 1;
}

message GetWristSensorResponse {
  WristSensor wristSensor = 1;
}

message CreateWristSensorRequest {
  WristSensor wristSensor = 1;
}

message CreateWristSensorResponse {
  WristSensor wristSensor = 1;
}

message UpdateWristSensorRequest {
  WristSensor wristSensor = 1;
}

message UpdateWristSensorResponse {
  WristSensor wristSensor = 1;
}

message DeleteWristSensorRequest {
  string id = 1;
}

message DeleteWristSensorResponse {
  bool success = 1;
}

message WristSensor {
  string id = 1;
  string name = 2;
  string description = 3;
}

message WristSensorData {
  string id = 1;
  uint32 timestamp = 2;
  uint32 num_sequence = 3;
  repeated double data = 4;
}

message SetWristSensorDataRequest {
  string id = 1;
  WristSensorData data = 2;
}

message SetWristSensorDataResponse {
  bool success = 1;
}
